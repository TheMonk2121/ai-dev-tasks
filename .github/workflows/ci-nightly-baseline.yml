name: Nightly Baseline
on:
  schedule: 
    - cron: "0 6 * * *"  # 06:00 UTC daily
  workflow_dispatch: {}
jobs:
  baseline:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ai_agency
        ports:
          - 5432/tcp
        options: >-
          --health-cmd "pg_isready -U postgres -d ai_agency"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup UV
        uses: astral-sh/setup-uv@v4
        with:
          version: latest
      
      - name: Install dependencies (uv)
        run: |
          uv sync --all-extras --dev
      
      - name: Configure AWS credentials (OIDC)
        if: ${{ vars.AWS_ROLE_TO_ASSUME != '' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Export service port (PGPORT)
        run: echo "PGPORT=${{ job.services.postgres.ports[5432] }}" >> $GITHUB_ENV

      - name: Validate profile configuration
        run: |
          python3 scripts/lib/config_loader.py --profile real --help || true
          echo "âœ… Real profile configuration validated"
      
      - name: Setup environment
        run: |
          # Compute DSN from service container published port
          echo "POSTGRES_DSN=postgresql://postgres:postgres@localhost:${PGPORT}/ai_agency" >> $GITHUB_ENV
          # Region used by Bedrock client libraries
          echo "AWS_REGION=us-east-1" >> $GITHUB_ENV

      - name: Export OpenAI key (if available)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          if [ -n "${OPENAI_API_KEY}" ]; then
            echo "OPENAI_API_KEY=${OPENAI_API_KEY}" >> $GITHUB_ENV
          fi

      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Initialize database schema
        run: |
          PGHOST=localhost PGPORT=$PGPORT PGUSER=postgres PGPASSWORD=postgres PGDATABASE=ai_agency \
            bash scripts/ci_init_db.sh

      - name: Eval (real, higher concurrency)
        env:
          MAX_WORKERS: "12"
        run: |
          make pipeline
      
      - name: Upload baseline results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: baseline-results
          path: |
            metrics/baseline_evaluations/**
            metrics/history/**
          retention-days: 30
