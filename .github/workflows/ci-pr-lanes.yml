---
name: PR Test Lanes

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  smoke:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install UV
        uses: astral-sh/setup-uv@v4
        with:
          version: latest

      - name: Install deps
        run: |
          uv sync --all-extras --dev

      - name: Smoke tests (critical only)
        run: |
          uv run pytest -m "critical" -q --maxfail=3

  impact:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install UV
        uses: astral-sh/setup-uv@v4
        with:
          version: latest

      - name: Install deps
        run: |
          uv sync --all-extras --dev

      - name: Install ripgrep
        run: sudo apt-get update && sudo apt-get install -y ripgrep

      - name: Get changed files
        id: changed-files
        run: |
          git diff --name-only origin/main...HEAD | \
            grep -E '^(src|dspy-rag-system/src|configs)/' > changed_files.txt
          echo "files=$(cat changed_files.txt | tr '\n' ' ')" >> $GITHUB_OUTPUT

      - name: Run impacted tests
        run: |
          if [ -s changed_files.txt ]; then
            uv run bash -lc "python scripts/select_impacted_tests.py --files changed_files.txt | xargs -r -n1 pytest -q --maxfail=5"
          else
            echo "No relevant files changed, skipping impact tests"
          fi

  critical:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install UV
        uses: astral-sh/setup-uv@v4
        with:
          version: latest

      - name: Install deps
        run: |
          uv sync --all-extras --dev

      - name: Critical tests (no legacy)
        run: |
          uv run pytest -m "critical and not legacy" -q --maxfail=2

  full-signal:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install UV
        uses: astral-sh/setup-uv@v4
        with:
          version: latest

      - name: Install deps
        run: |
          uv sync --all-extras --dev

      - name: Install ripgrep
        run: sudo apt-get update && sudo apt-get install -y ripgrep

      - name: Full test signal collection
        run: |
          mkdir -p metrics
          uv run coverage erase
          uv run pytest -n auto --cov=src --cov=dspy-rag-system/src \
            --cov-branch --cov-context=test -q || true
          uv run coverage combine
          uv run coverage json -o metrics/coverage.json

      - name: Durations
        run: |
          uv run pytest --durations=1000 -q > metrics/durations.txt || true

      - name: JUnit (latest)
        run: |
          uv run pytest -q --junitxml=metrics/junit_latest.xml || true

      - name: Churn
        run: |
          git log --pretty=format: --name-only | \
            rg -N '^(src|dspy-rag-system/src|configs)/' | \
            sort | uniq -c > metrics/churn.txt

      - name: Complexity
        run: |
          uv run radon cc -s -j src dspy-rag-system/src > metrics/complexity.json

      - name: Flake sampling
        run: |
          uv run pytest -n 3 --randomly-seed=42,43,44,45,46 \
            --randomly-dont-reorganize -q > metrics/flake_sample.txt || true

      - name: Build signal report
        run: |
          uv run python scripts/test_signal_report.py

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tests-signal-main
          path: metrics/tests_signal.csv
