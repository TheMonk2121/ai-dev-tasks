{"id": "EVAL_GOLD_0001", "mode": "retrieval", "query": "What is DSPy according to 400_09_ai-frameworks-dspy.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": null, "expected_files": ["400_guides/400_09_ai-frameworks-dspy.md"], "globs": null, "expected_decisions": null, "notes": "Ported from dspy-rag-system/eval_gold.py GOLD"}
{"id": "EVAL_GOLD_ADD_0001", "mode": "retrieval", "query": "According to 400_02_memory-rehydration-context-management.md, what is the memory system in this project?", "tags": ["rag_qa_single"], "category": null, "gt_answer": null, "expected_files": ["400_guides/400_02_memory-rehydration-context-management.md"], "globs": null, "expected_decisions": null, "notes": "Ported from dspy-rag-system/eval_gold.py ADDITIONAL_GOLD"}
{"id": "EVAL_GOLD_ADD_0002", "mode": "retrieval", "query": "Where are the model configuration settings defined?", "tags": ["rag_qa_single"], "category": null, "gt_answer": null, "expected_files": ["200_setup/201_model-configuration.md"], "globs": null, "expected_decisions": null, "notes": "Ported from dspy-rag-system/eval_gold.py ADDITIONAL_GOLD"}
{"id": "EVAL_GOLD_ADD_0003", "mode": "retrieval", "query": "What are the naming conventions used in this repo (see 200_setup)?", "tags": ["rag_qa_single"], "category": null, "gt_answer": null, "expected_files": ["200_setup/200_naming-conventions.md"], "globs": null, "expected_decisions": null, "notes": "Ported from dspy-rag-system/eval_gold.py ADDITIONAL_GOLD"}
{"id": "EVAL_GOLD_ADD_0004", "mode": "retrieval", "query": "Show the DSPy development context TL;DR.", "tags": ["rag_qa_single"], "category": null, "gt_answer": null, "expected_files": ["100_memory/104_dspy-development-context.md"], "globs": null, "expected_decisions": null, "notes": "Ported from dspy-rag-system/eval_gold.py ADDITIONAL_GOLD"}
{"id": "EVAL_GOLD_ADD_0005", "mode": "retrieval", "query": "Which file summarizes backlog and priorities?", "tags": ["rag_qa_single"], "category": null, "gt_answer": null, "expected_files": ["000_core/000_backlog.md"], "globs": null, "expected_decisions": null, "notes": "Ported from dspy-rag-system/eval_gold.py ADDITIONAL_GOLD"}
{"id": "EVAL_GOLD_ADD_0006", "mode": "retrieval", "query": "Which file defines the governance and AI constitution?", "tags": ["rag_qa_single"], "category": null, "gt_answer": null, "expected_files": ["400_ai-constitution.md"], "globs": null, "expected_decisions": null, "notes": "Ported from dspy-rag-system/eval_gold.py ADDITIONAL_GOLD"}
{"id": "EVAL_GOLD_ADD_0007", "mode": "retrieval", "query": "Where are database troubleshooting patterns documented?", "tags": ["rag_qa_single"], "category": null, "gt_answer": null, "expected_files": ["100_memory/100_database-troubleshooting-patterns.md"], "globs": null, "expected_decisions": null, "notes": "Ported from dspy-rag-system/eval_gold.py ADDITIONAL_GOLD"}
{"id": "EVAL_GOLD_ADD_0008", "mode": "retrieval", "query": "Which file describes the memory/context workflow?", "tags": ["rag_qa_single"], "category": null, "gt_answer": null, "expected_files": ["100_memory/103_memory-context-workflow.md"], "globs": null, "expected_decisions": null, "notes": "Ported from dspy-rag-system/eval_gold.py ADDITIONAL_GOLD"}
{"id": "EVAL_GOLD_ADD_0009", "mode": "retrieval", "query": "Give the high-level getting started index.", "tags": ["rag_qa_single"], "category": null, "gt_answer": null, "expected_files": ["400_guides/400_guide-index.md"], "globs": null, "expected_decisions": null, "notes": "Ported from dspy-rag-system/eval_gold.py ADDITIONAL_GOLD"}
{"id": "EVAL_GOLD_ADD_0010", "mode": "retrieval", "query": "Show me the setup docs under 200_setup.", "tags": ["rag_qa_single"], "category": null, "gt_answer": null, "expected_files": null, "globs": ["200_setup/*.md"], "expected_decisions": null, "notes": "Ported from dspy-rag-system/eval_gold.py ADDITIONAL_GOLD (namespace)"}
{"id": "EVAL_GOLD_ADD_0011", "mode": "retrieval", "query": "Point me to memory-related guides under 100_memory.", "tags": ["rag_qa_single"], "category": null, "gt_answer": null, "expected_files": null, "globs": ["100_memory/*.md"], "expected_decisions": null, "notes": "Ported from dspy-rag-system/eval_gold.py ADDITIONAL_GOLD (namespace)"}
{"id": "DECISION_001", "mode": "decision", "query": "postgresql", "tags": ["meta_ops"], "category": null, "gt_answer": null, "expected_files": null, "globs": null, "expected_decisions": ["use_postgresql_with_e586cb3c2389", "postgresql_with_pgvector_5931f6780a53"], "notes": "Ported from evaluation_harness.create_gold_set() - Database technology choice"}
{"id": "DECISION_002", "mode": "decision", "query": "hybrid search", "tags": ["meta_ops"], "category": null, "gt_answer": null, "expected_files": null, "globs": null, "expected_decisions": ["implement_a_hybrid_bdfdbadd8cc2", "a_hybrid_search_417c35cf99d5"], "notes": "Ported from evaluation_harness.create_gold_set() - Search system architecture"}
{"id": "DECISION_003", "mode": "decision", "query": "vector search", "tags": ["meta_ops"], "category": null, "gt_answer": null, "expected_files": null, "globs": null, "expected_decisions": ["use_postgresql_with_e586cb3c2389", "postgresql_with_pgvector_5931f6780a53"], "notes": "Ported from evaluation_harness.create_gold_set() - Vector search implementation"}
{"id": "DECISION_004", "mode": "decision", "query": "database choice", "tags": ["meta_ops"], "category": null, "gt_answer": null, "expected_files": null, "globs": null, "expected_decisions": ["use_postgresql_with_e586cb3c2389"], "notes": "Ported from evaluation_harness.create_gold_set() - Database selection decision"}
{"id": "DECISION_005", "mode": "decision", "query": "search optimization", "tags": ["meta_ops"], "category": null, "gt_answer": null, "expected_files": null, "globs": null, "expected_decisions": ["implement_a_hybrid_bdfdbadd8cc2"], "notes": "Ported from evaluation_harness.create_gold_set() - Search performance optimization"}
{"id": "DECISION_006", "mode": "decision", "query": "pgvector", "tags": ["meta_ops"], "category": null, "gt_answer": null, "expected_files": null, "globs": null, "expected_decisions": ["use_postgresql_with_e586cb3c2389", "postgresql_with_pgvector_5931f6780a53"], "notes": "Ported from evaluation_harness.create_gold_set() - Vector extension choice"}
{"id": "DECISION_007", "mode": "decision", "query": "BM25", "tags": ["meta_ops"], "category": null, "gt_answer": null, "expected_files": null, "globs": null, "expected_decisions": ["implement_a_hybrid_bdfdbadd8cc2"], "notes": "Ported from evaluation_harness.create_gold_set() - Text search algorithm"}
{"id": "DECISION_008", "mode": "decision", "query": "memory system", "tags": ["meta_ops"], "category": null, "gt_answer": null, "expected_files": null, "globs": null, "expected_decisions": [], "notes": "Ported from evaluation_harness.create_gold_set() - Memory system architecture (no decisions yet)"}
{"id": "DECISION_009", "mode": "decision", "query": "API design", "tags": ["meta_ops"], "category": null, "gt_answer": null, "expected_files": null, "globs": null, "expected_decisions": [], "notes": "Ported from evaluation_harness.create_gold_set() - API design decisions (no decisions yet)"}
{"id": "What are the DSPy integration patterns in 400_09_ai-frameworks-dspy.md?", "mode": "retrieval", "query": "What are the DSPy integration patterns in 400_09_ai-frameworks-dspy.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": null, "expected_files": ["400_guides/400_09_ai-frameworks-dspy.md"], "globs": ["400_guides/400_*dspy*.md"], "expected_decisions": null, "notes": "Ported from evals/gold_cases.json"}
{"id": "List the core workflow guides in 000_core.", "mode": "retrieval", "query": "List the core workflow guides in 000_core.", "tags": ["rag_qa_single"], "category": null, "gt_answer": null, "expected_files": ["000_core/README.md", "000_core/000_evaluation-system-entry-point.md"], "globs": ["000_core/*.md"], "expected_decisions": null, "notes": "Ported from evals/gold_cases.json"}
{"id": "According to 400_06_memory-and-context-systems.md, what is the memory system in this project?", "mode": "retrieval", "query": "According to 400_06_memory-and-context-systems.md, what is the memory system in this project?", "tags": ["rag_qa_single"], "category": null, "gt_answer": null, "expected_files": ["400_guides/400_02_memory-rehydration-context-management.md", "100_memory/100_cursor-memory-context.md"], "globs": ["400_guides/400_*memory*.md", "100_memory/*.md"], "expected_decisions": null, "notes": "Ported from evals/gold_cases.json"}
{"id": "Where are the model configuration settings defined?", "mode": "retrieval", "query": "Where are the model configuration settings defined?", "tags": ["rag_qa_single"], "category": null, "gt_answer": null, "expected_files": null, "globs": null, "expected_decisions": null, "notes": "Ported from evals/gold_cases.json"}
{"id": "What are the naming conventions used in this repo (see 200_setup)?", "mode": "retrieval", "query": "What are the naming conventions used in this repo (see 200_setup)?", "tags": ["rag_qa_single"], "category": null, "gt_answer": null, "expected_files": null, "globs": null, "expected_decisions": null, "notes": "Ported from evals/gold_cases.json"}
{"id": "Show the DSPy development context TL;DR.", "mode": "retrieval", "query": "Show the DSPy development context TL;DR.", "tags": ["rag_qa_single"], "category": null, "gt_answer": null, "expected_files": null, "globs": null, "expected_decisions": null, "notes": "Ported from evals/gold_cases.json"}
{"id": "Which file summarizes backlog and priorities?", "mode": "retrieval", "query": "Which file summarizes backlog and priorities?", "tags": ["rag_qa_single"], "category": null, "gt_answer": null, "expected_files": null, "globs": null, "expected_decisions": null, "notes": "Ported from evals/gold_cases.json"}
{"id": "Which file defines the governance and AI constitution?", "mode": "retrieval", "query": "Which file defines the governance and AI constitution?", "tags": ["rag_qa_single"], "category": null, "gt_answer": null, "expected_files": null, "globs": null, "expected_decisions": null, "notes": "Ported from evals/gold_cases.json"}
{"id": "Where are database troubleshooting patterns documented?", "mode": "retrieval", "query": "Where are database troubleshooting patterns documented?", "tags": ["rag_qa_single"], "category": null, "gt_answer": null, "expected_files": null, "globs": null, "expected_decisions": null, "notes": "Ported from evals/gold_cases.json"}
{"id": "Which file describes the memory/context workflow?", "mode": "retrieval", "query": "Which file describes the memory/context workflow?", "tags": ["rag_qa_single"], "category": null, "gt_answer": null, "expected_files": null, "globs": null, "expected_decisions": null, "notes": "Ported from evals/gold_cases.json"}
{"id": "Give the high-level getting started index.", "mode": "retrieval", "query": "Give the high-level getting started index.", "tags": ["rag_qa_single"], "category": null, "gt_answer": null, "expected_files": null, "globs": null, "expected_decisions": null, "notes": "Ported from evals/gold_cases.json"}
{"id": "Show me the setup docs under 200_setup.", "mode": "retrieval", "query": "Show me the setup docs under 200_setup.", "tags": ["rag_qa_single"], "category": null, "gt_answer": null, "expected_files": null, "globs": null, "expected_decisions": null, "notes": "Ported from evals/gold_cases.json"}
{"id": "Point me to memory-related guides under 100_memory.", "mode": "retrieval", "query": "Point me to memory-related guides under 100_memory.", "tags": ["rag_qa_single"], "category": null, "gt_answer": null, "expected_files": null, "globs": null, "expected_decisions": null, "notes": "Ported from evals/gold_cases.json"}
{"id": "doc_demote", "mode": "retrieval", "query": "Why do we demote docs/design subtrees slightly?", "tags": ["meta_ops"], "category": null, "gt_answer": null, "expected_files": ["src/dspy_modules/retriever/pg.py"], "globs": ["src/dspy_modules/retriever/pg.py"], "expected_decisions": null, "notes": "Ported from evals/gold_cases.json"}
{"id": "ops_bias_subtrees", "mode": "retrieval", "query": "Why do we bias ops/shell/setup subtrees for ops_health?", "tags": ["ops_health"], "category": null, "gt_answer": null, "expected_files": ["src/dspy_modules/retriever/rerank.py"], "globs": ["src/dspy_modules/retriever/rerank.py"], "expected_decisions": null, "notes": "Ported from evals/gold_cases.json"}
{"id": "ops_phrase_hints", "mode": "retrieval", "query": "Why do ops_health phrase hints include health check and shell init?", "tags": ["ops_health"], "category": null, "gt_answer": null, "expected_files": ["src/dspy_modules/retriever/query_rewrite.py"], "globs": ["*/retriever/*query*.py"], "expected_decisions": null, "notes": "Ported from evals/gold_cases.json"}
{"id": "setup_steps_overview", "mode": "retrieval", "query": "What are the core steps emphasized under 200_setup?", "tags": ["rag_qa_single"], "category": null, "gt_answer": null, "expected_files": ["200_setup/200_naming-conventions.md", "CURSOR_MCP_SETUP.md"], "globs": ["200_setup/*.md"], "expected_decisions": null, "notes": "Ported from evals/gold_cases.json"}
{"id": "gold_000", "mode": "reader", "query": "How do I run the evals?", "tags": ["ops", "evaluation", "evals"], "category": "ops_health", "gt_answer": "Run the evals using: source throttle_free_eval.sh && python3 scripts/ragchecker_official_evaluation.py --use-bedrock --bypass-cli --stable", "expected_files": ["RUN_THE_EVALS_START_HERE.md", "scripts/ragchecker_official_evaluation.py"], "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_001", "mode": "reader", "query": "What is the memory rehydration protocol?", "tags": ["memory", "context", "rehydration"], "category": "ops_health", "gt_answer": "Run: export POSTGRES_DSN=\"mock://test\" && python3 scripts/unified_memory_orchestrator.py --systems ltst cursor go_cli prime --role planner \"current project status and core documentation\"", "expected_files": ["100_memory/100_cursor-memory-context.md"], "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_002", "mode": "reader", "query": "How do I create a PRD?", "tags": ["prd", "workflow", "documentation"], "category": "ops_health", "gt_answer": "Use the 001_create-prd.md template to create product requirements documents following the established workflow", "expected_files": ["000_core/001_create-prd.md"], "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_003", "mode": "reader", "query": "What are the RAGChecker baseline metrics?", "tags": ["ragchecker", "metrics", "baseline"], "category": "ops_health", "gt_answer": "Current baseline: Precision ≥0.20, Recall ≥0.45, F1 Score ≥0.22, Faithfulness ≥0.60", "expected_files": ["400_guides/400_11_performance-optimization.md"], "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_004", "mode": "reader", "query": "How do I set up shell integration?", "tags": ["shell", "integration", "setup"], "category": "ops_health", "gt_answer": "Run ./setup_shell_integration.sh from the root directory to copy env.ai-dev-tasks and append source lines to shell profiles", "expected_files": ["setup_shell_integration.sh"], "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_005", "mode": "reader", "query": "What is the canary deployment percentage limit?", "tags": ["canary", "deployment", "percentage"], "category": "ops_health", "gt_answer": "Canary percentage should not exceed 50% by default, configurable via max_percentage parameter", "expected_files": ["scripts/canary_percentage_check.py"], "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_006", "mode": "reader", "query": "How do I create a vector index with IVFFLAT?", "tags": ["db", "vector", "index", "ivfflat"], "category": "db_workflows", "gt_answer": "Create an IVFFLAT index with 100 lists on embedding_vector using vector_cosine_ops", "expected_files": ["scripts/sql/fix_sparse_vector_ddls.sql"], "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_007", "mode": "reader", "query": "What is the websearch tsquery function?", "tags": ["db", "fts", "tsquery", "postgresql"], "category": "db_workflows", "gt_answer": "websearch_to_tsquery is used for full-text search with websearch syntax support in PostgreSQL", "expected_files": ["src/dspy_modules/vector_store.py"], "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_008", "mode": "reader", "query": "How do I configure pgvector for ANN operations?", "tags": ["db", "pgvector", "ann", "cosine"], "category": "db_workflows", "gt_answer": "Use pgvector with cosine distance operator (<=>) and configure HNSW or IVFFLAT indexes for approximate nearest neighbor search", "expected_files": ["src/dspy_modules/vector_store.py"], "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_009", "mode": "reader", "query": "What is the RRF fusion method?", "tags": ["db", "rrf", "fusion", "ranking"], "category": "db_workflows", "gt_answer": "Reciprocal Rank Fusion combines multiple ranking lists using weighted reciprocal rank scoring with k=60 parameter", "expected_files": ["src/dspy_modules/rag_pipeline.py"], "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_010", "mode": "reader", "query": "How do I run database migrations?", "tags": ["db", "migration", "resilience"], "category": "db_workflows", "gt_answer": "Use the database resilience manager with retry wrappers and proper connection pooling for migration operations", "expected_files": ["src/utils/database_resilience.py"], "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_011", "mode": "reader", "query": "What is the chunking configuration for embeddings?", "tags": ["db", "chunking", "embeddings", "configuration"], "category": "db_workflows", "gt_answer": "Default chunk size is 450 tokens with 0.10 overlap ratio and Jaccard threshold of 0.8 for deduplication", "expected_files": ["templates/eval_manifest_template.yaml"], "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_012", "mode": "reader", "query": "How does the DSPy RAG pipeline work?", "tags": ["rag", "dspy", "pipeline", "retrieval"], "category": "rag_qa_single", "gt_answer": "The RAG pipeline uses hybrid retrieval with RRF fusion, cross-encoder reranking, and context-aware generation with citation extraction", "expected_files": ["src/dspy_modules/rag_pipeline.py"], "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_013", "mode": "reader", "query": "What is the HybridVectorStore?", "tags": ["rag", "vector", "hybrid", "search"], "category": "rag_qa_single", "gt_answer": "HybridVectorStore combines dense vector search with sparse BM25 search using z-score normalization and RRF fusion", "expected_files": ["src/dspy_modules/vector_store.py"], "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_014", "mode": "reader", "query": "How do I configure the reranker?", "tags": ["rag", "reranker", "cross-encoder"], "category": "rag_qa_single", "gt_answer": "Set RERANK_ENABLE=1 and use BAAI/bge-reranker-base model for cross-encoder reranking with configurable pool size", "expected_files": ["src/dspy_modules/rag_pipeline.py"], "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_015", "mode": "reader", "query": "What is the citation extraction process?", "tags": ["rag", "citations", "extraction", "scoring"], "category": "rag_qa_single", "gt_answer": "Citation extraction uses advanced scoring with expected citation matching, filename extraction, and relevance scoring for top 5 citations", "expected_files": ["src/dspy_modules/rag_pipeline.py"], "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_016", "mode": "reader", "query": "How do I use the teleprompter?", "tags": ["rag", "teleprompter", "optimization"], "category": "rag_qa_single", "gt_answer": "Use BootstrapFewShot teleprompter with grounding metric for RAG optimization and few-shot learning", "expected_files": ["dspy_program.py"], "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_017", "mode": "reader", "query": "What is the context consumption enforcement?", "tags": ["rag", "context", "enforcement", "grounding"], "category": "rag_qa_single", "gt_answer": "Context consumption enforcement requires at least 50 words of context and validates that answers are grounded in retrieved context", "expected_files": ["src/dspy_modules/rag_pipeline.py"], "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_018", "mode": "reader", "query": "How does multi-hop retrieval work with fusion?", "tags": ["rag", "multi-hop", "fusion", "hyde", "prf"], "category": "rag_qa_multi", "gt_answer": "Multi-hop retrieval uses HyDE for query expansion, PRF for term expansion, and RRF fusion to combine dense and sparse results with cross-encoder reranking", "expected_files": ["src/dspy_modules/rag_pipeline.py"], "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_019", "mode": "reader", "query": "What is the gate and promote system?", "tags": ["rag", "gates", "promotion", "quality"], "category": "rag_qa_multi", "gt_answer": "The gate and promote system validates F1 score, precision drift, latency, and oracle metrics before promoting DSPy compiled artifacts to production", "expected_files": ["scripts/gate_and_promote.py"], "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_020", "mode": "reader", "query": "How do I configure evaluation thresholds?", "tags": ["rag", "evaluation", "thresholds", "gates"], "category": "rag_qa_multi", "gt_answer": "Set evaluation thresholds for F1 score (≥0.22), precision drift (≤0.02), latency increase (≤15%), and oracle prefilter (≥0.85)", "expected_files": ["scripts/gate_and_promote.py"], "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_021", "mode": "reader", "query": "What is the evaluation manifest template?", "tags": ["rag", "evaluation", "manifest", "template"], "category": "rag_qa_multi", "gt_answer": "The evaluation manifest template includes chunking configuration, model specifications, retrieval parameters, and evaluation thresholds for reproducible evaluations", "expected_files": ["templates/eval_manifest_template.yaml"], "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_022", "mode": "reader", "query": "How does the RAGChecker evaluation work?", "tags": ["rag", "evaluation", "ragchecker", "oracle"], "category": "rag_qa_multi", "gt_answer": "RAGChecker evaluation uses real DSPy RAG integration with oracle metrics, retrieval snapshots, and comprehensive case result normalization", "expected_files": ["scripts/ragchecker_official_evaluation.py"], "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_023", "mode": "reader", "query": "What is the provenance tracking system?", "tags": ["rag", "provenance", "tracking", "leakage"], "category": "rag_qa_multi", "gt_answer": "Provenance tracking includes few-shot ID tracking, chunk variant identification, and leakage guards to prevent data contamination", "expected_files": ["src/utils/few_shot_provenance.py"], "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_024", "mode": "reader", "query": "How do I run the runbook?", "tags": ["meta", "runbook", "workflow"], "category": "meta_ops", "gt_answer": "Follow the established workflows in 000_core directory: create PRD, generate tasks, and process task lists using the documented procedures", "expected_files": ["000_core/000_backlog.md", "000_core/001_create-prd.md"], "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_025", "mode": "reader", "query": "Where do evaluation manifests live?", "tags": ["meta", "manifests", "evaluation"], "category": "meta_ops", "gt_answer": "Evaluation manifests are stored in metrics/baseline_evaluations/ directory with timestamped versions and configuration metadata", "expected_files": ["metrics/baseline_evaluations/"], "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_026", "mode": "reader", "query": "Which gates block deployment?", "tags": ["meta", "gates", "deployment", "blocking"], "category": "meta_ops", "gt_answer": "Deployment is blocked by F1 score below baseline, precision drift >2%, latency increase >15%, and oracle metrics below thresholds", "expected_files": ["scripts/gate_and_promote.py"], "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_027", "mode": "reader", "query": "How do I configure the quantum entanglement module?", "tags": ["negative", "quantum", "entanglement"], "category": "negatives", "gt_answer": "Not in context.", "expected_files": null, "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_028", "mode": "reader", "query": "What is the API key for the Mars colony database?", "tags": ["negative", "mars", "api-key"], "category": "negatives", "gt_answer": "Not in context.", "expected_files": null, "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "gold_029", "mode": "reader", "query": "How do I install the time travel dependencies?", "tags": ["negative", "time-travel", "dependencies"], "category": "negatives", "gt_answer": "Not in context.", "expected_files": null, "globs": null, "expected_decisions": null, "notes": "Ported from datasets/dev_gold.jsonl"}
{"id": "What is DSPy according to 400_07_ai-frameworks-dspy.md?", "mode": "retrieval", "query": "What is DSPy according to 400_07_ai-frameworks-dspy.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": null, "expected_files": ["400_guides/400_09_ai-frameworks-dspy.md"], "globs": ["400_guides/400_*dspy*.md"], "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of OPTIMIZATION_SUMMARY.md?", "mode": "retrieval", "query": "What is the main purpose of OPTIMIZATION_SUMMARY.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["Document: OPTIMIZATION_SUMMARY\nSection: OPTIMIZATION_SUMMARY.md\nType: markdown\n\n### **Quality Gates Passed**\n- ✅ No code duplication\n- ✅ Proper error handling\n- ✅ Type safety maint"], "expected_files": ["OPTIMIZATION_SUMMARY.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of 400_09_ai-frameworks-dspy.md?", "mode": "retrieval", "query": "What is the main purpose of 400_09_ai-frameworks-dspy.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["Document: 400_09_ai-frameworks-dspy\nSection: 400_guides/400_09_ai-frameworks-dspy.md\nType: markdown\n\n\n\n**AI Testing Tools**:\n- **Performance Monitoring**: Real-time AI performance "], "expected_files": ["400_guides/400_09_ai-frameworks-dspy.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of 000_backlog.md?", "mode": "retrieval", "query": "What is the main purpose of 000_backlog.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["Document: 000_backlog\nSection: 000_core/000_backlog.md\nType: markdown\n\n#### Phase 1: Database Schema Implementation (2 days)\n**Tasks:**\n- [ ] Create `conv_chunks` table with HNSW i"], "expected_files": ["000_core/000_backlog.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of 400_11_performance-optimization.md?", "mode": "retrieval", "query": "What is the main purpose of 400_11_performance-optimization.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["Document: 400_11_performance-optimization\nSection: 400_guides/400_11_performance-optimization.md\nType: markdown\n\n\nRAGChecker Evaluation System\n├── OfficialRAGCheckerEvaluator (existt"], "expected_files": ["400_guides/400_11_performance-optimization.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of 100_database-troubleshooting-patterns.md?", "mode": "retrieval", "query": "What is the main purpose of 100_database-troubleshooting-patterns.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["Document: 100_database-troubleshooting-patterns\nSection: 100_memory/100_database-troubleshooting-patterns.md\nType: markdown\n\n\n```bash\n# 1."], "expected_files": ["100_memory/100_database-troubleshooting-patterns.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of 100_governance-by-code-insights.md?", "mode": "retrieval", "query": "What is the main purpose of 100_governance-by-code-insights.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["Document: 100_governance-by-code-insights\nSection: 100_memory/100_governance-by-code-insights.md\nType: markdown\n\n\n```python\n# Budget pattern\ndef enforce_budget(metric, threshold, a"], "expected_files": ["100_memory/100_governance-by-code-insights.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of 100_implementation-patterns-library.md?", "mode": "retrieval", "query": "What is the main purpose of 100_implementation-patterns-library.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["Document: 100_implementation-patterns-library\nSection: 100_memory/100_implementation-patterns-library.md\nType: markdown\n\n## 🚨 **CRITICAL: Implementation Patterns are Essential**\n\n*"], "expected_files": ["100_memory/100_implementation-patterns-library.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of 400_05_codebase-organization-patterns.md?", "mode": "retrieval", "query": "What is the main purpose of 400_05_codebase-organization-patterns.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["Document: 400_05_codebase-organization-patterns\nSection: 400_guides/400_05_codebase-organization-patterns.md\nType: markdown\n\n### Writing Quality Code\n1. **Follow established coding"], "expected_files": ["400_guides/400_05_codebase-organization-patterns.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of 400_06_memory-and-context-systems.md?", "mode": "retrieval", "query": "What is the main purpose of 400_06_memory-and-context-systems.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["\\n+## 🧠 Memory Rehydration Requirements (Constitution)\n\\n+- Run `./scripts/memory_up.sh` at session start; then read `100_memory/100_cursor-memory-context.md` and `000_core/000_bac"], "expected_files": ["400_guides/400_06_memory-and-context-systems.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of 400_01_memory-system-architecture.md?", "mode": "retrieval", "query": "What is the main purpose of 400_01_memory-system-architecture.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["Document: 400_01_memory-system-architecture\nSection: 400_guides/400_01_memory-system-architecture.md\nType: markdown\n\n\n```bash\n# Test memory rehydration\n./scripts/memory_up.sh -r pl"], "expected_files": ["400_guides/400_01_memory-system-architecture.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of TASK_GENERATION_B-1059_retrieval-tuning-protocol.md?", "mode": "retrieval", "query": "What is the main purpose of TASK_GENERATION_B-1059_retrieval-tuning-protocol.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["Document: TASK_GENERATION_B-1059_retrieval-tuning-protocol\nSection: 000_core/TASK_GENERATION_B-1059_retrieval-tuning-protocol.md\nType: markdown\n\n## 🎯 **Ready for Implementation**\n\n"], "expected_files": ["000_core/TASK_GENERATION_B-1059_retrieval-tuning-protocol.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of 002_generate-tasks-TEMPLATE.md?", "mode": "retrieval", "query": "What is the main purpose of 002_generate-tasks-TEMPLATE.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["Document: 002_generate-tasks-TEMPLATE\nSection: 000_core/002_generate-tasks-TEMPLATE.md\nType: markdown\n\n#### **3."], "expected_files": ["000_core/002_generate-tasks-TEMPLATE.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of 100_debugging-effectiveness-analysis.md?", "mode": "retrieval", "query": "What is the main purpose of 100_debugging-effectiveness-analysis.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["Document: 100_debugging-effectiveness-analysis\nSection: 100_memory/100_debugging-effectiveness-analysis.md\nType: markdown\n\n### **Phase 1: Baseline Establishment (Week 1-2)**\n- [ ] "], "expected_files": ["100_memory/100_debugging-effectiveness-analysis.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of 400_06_backlog-management-priorities.md?", "mode": "retrieval", "query": "What is the main purpose of 400_06_backlog-management-priorities.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["Document: 400_06_backlog-management-priorities\nSection: 400_guides/400_06_backlog-management-priorities.md\nType: markdown\n\n#### **How to Identify Execution Type**\n\n**Look for these"], "expected_files": ["400_guides/400_06_backlog-management-priorities.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of B-1007_COMPLETION_SUMMARY.md?", "mode": "retrieval", "query": "What is the main purpose of B-1007_COMPLETION_SUMMARY.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["Document: B-1007_COMPLETION_SUMMARY\nSection: B-1007_COMPLETION_SUMMARY.md\nType: markdown\n\n### Business Success ✅\n- ✅ 50% reduction in runtime errors through type validation\n- ✅ 30%"], "expected_files": ["B-1007_COMPLETION_SUMMARY.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of 100_cursor-memory-context.md?", "mode": "retrieval", "query": "What is the main purpose of 100_cursor-memory-context.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["Document: 100_cursor-memory-context\nSection: 100_memory/100_cursor-memory-context.md\nType: markdown\n\n### **B-1032: Documentation t-t3 Authority Structure Implementation**\n\n**Status"], "expected_files": ["100_memory/100_cursor-memory-context.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of 400_07_project-planning-roadmap.md?", "mode": "retrieval", "query": "What is the main purpose of 400_07_project-planning-roadmap.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["Document: 400_07_project-planning-roadmap\nSection: 400_guides/400_07_project-planning-roadmap.md\nType: markdown\n\n\n```markdown\n## Capacity Plan: January 2025\n\n**Available Hours**: 1"], "expected_files": ["400_guides/400_07_project-planning-roadmap.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of 500_advanced-model-adaptation-framework-task-6-2.md?", "mode": "retrieval", "query": "What is the main purpose of 500_advanced-model-adaptation-framework-task-6-2.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["# Advanced Model Adaptation Framework: Task 6.2\n\n<!-- MEMORY_CONTEXT: HIGH - Advanced model adaptation framework implementation for B-032 Memory Context System Architecture Researc"], "expected_files": ["500_research/500_advanced-model-adaptation-framework-task-6-2.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of PRD_B-1059_retrieval-tuning-protocol.md?", "mode": "retrieval", "query": "What is the main purpose of PRD_B-1059_retrieval-tuning-protocol.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["Document: PRD_B-1059_retrieval-tuning-protocol\nSection: 000_core/PRD_B-1059_retrieval-tuning-protocol.md\nType: markdown\n\n## ⚖️ **Trade-offs & Alternatives**\n\n- **Higher BM25 bias**"], "expected_files": ["000_core/PRD_B-1059_retrieval-tuning-protocol.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of PRECISION_CLIMB_V2_IMPLEMENTATION_SUMMARY.md?", "mode": "retrieval", "query": "What is the main purpose of PRECISION_CLIMB_V2_IMPLEMENTATION_SUMMARY.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["# 🚀 Precision-Climb v2 Implementation Summary\n\n**Date**: September 3, 2025\n**Status**: ✅ **IMPLEMENTED** - All core layers operational\n**Target**: Precision ≥ 0.20, Recall ≥ 0.60, "], "expected_files": ["300_experiments/PRECISION_CLIMB_V2_IMPLEMENTATION_SUMMARY.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of 400_08_task-management-workflows.md?", "mode": "retrieval", "query": "What is the main purpose of 400_08_task-management-workflows.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["Document: 400_08_task-management-workflows\nSection: 400_guides/400_08_task-management-workflows.md\nType: markdown\n\n\n```bash\n# Execute sprint tasks\npython3 scripts/sprint_execution."], "expected_files": ["400_guides/400_08_task-management-workflows.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of 400_02_memory-rehydration-context-management.md?", "mode": "retrieval", "query": "What is the main purpose of 400_02_memory-rehydration-context-management.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["Document: 400_02_memory-rehydration-context-management\nSection: 400_guides/400_02_memory-rehydration-context-management.md\nType: markdown\n\n#### **Integration Benefits**\n\n**For Memo"], "expected_files": ["400_guides/400_02_memory-rehydration-context-management.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of 400_04_development-workflow-and-standards.md?", "mode": "retrieval", "query": "What is the main purpose of 400_04_development-workflow-and-standards.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["Document: 400_04_development-workflow-and-standards\nSection: 400_guides/400_04_development-workflow-and-standards.md\nType: markdown\n\n\n```python\ndef api_integration_pattern(endpoint"], "expected_files": ["400_guides/400_04_development-workflow-and-standards.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of 500_b031-completion-summary.md?", "mode": "retrieval", "query": "What is the main purpose of 500_b031-completion-summary.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["advanced indexing ### Technical Achievements - ✅ **Database Enhancement**: Advanced PostgreSQL + PGVector setup - ✅ **Performance Monitoring**: Real-time metrics tracking - ✅ **Int"], "expected_files": ["500_research/500_b031-completion-summary.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of DSPY_MULTI_AGENT_COMPLETION_SUMMARY.md?", "mode": "retrieval", "query": "What is the main purpose of DSPY_MULTI_AGENT_COMPLETION_SUMMARY.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["Document: DSPY_MULTI_AGENT_COMPLETION_SUMMARY\nSection: DSPY_MULTI_AGENT_COMPLETION_SUMMARY.md\nType: markdown\n\n### **Test Suite Results**\n- ✅ **Model Switching**: Successfully switc"], "expected_files": ["DSPY_MULTI_AGENT_COMPLETION_SUMMARY.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of 400_12_advanced-configurations.md?", "mode": "retrieval", "query": "What is the main purpose of 400_12_advanced-configurations.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["Document: 400_12_advanced-configurations\nSection: 400_guides/400_12_advanced-configurations.md\nType: markdown\n\n# ⚙️ Advanced Configurations\n\n<!-- ANCHOR_KEY: advanced-configuration"], "expected_files": ["400_guides/400_12_advanced-configurations.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of README.md?", "mode": "retrieval", "query": "What is the main purpose of README.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["Document: README\nSection: README.md\nType: markdown\n\n\n\n**Runtime Guard-Rails:**\n\n- **RAM Pressure Checks**: Prevent memory exhaustion\n\n- **Model Janitor**: Unload idle models automa"], "expected_files": ["README.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of 400_00_memory-system-overview.md?", "mode": "retrieval", "query": "What is the main purpose of 400_00_memory-system-overview.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["Document: 400_00_memory-system-overview\nSection: 400_guides/400_00_memory-system-overview.md\nType: markdown\n\n#### **Memory Quality Gates**\n- **Context Integrity**: All memory conte"], "expected_files": ["400_guides/400_00_memory-system-overview.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of 400_03_system-overview-and-architecture.md?", "mode": "retrieval", "query": "What is the main purpose of 400_03_system-overview-and-architecture.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["Document: 400_03_system-overview-and-architecture\nSection: 400_guides/400_03_system-overview-and-architecture.md\nType: markdown\n\n### **🚨 CRITICAL: Database Troubleshooting Patterns"], "expected_files": ["400_guides/400_03_system-overview-and-architecture.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the main purpose of 100_communication-patterns-guide.md?", "mode": "retrieval", "query": "What is the main purpose of 100_communication-patterns-guide.md?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["# Communication Patterns Guide\n\n\n\n## 🔎 TL;DR {#tldr}\n\n| what this file is | read when | do next |\n|---|---|---|\n| Codified communication patterns and formatting preferences for eff"], "expected_files": ["100_memory/100_communication-patterns-guide.md"], "globs": null, "expected_decisions": null, "notes": null}
{"id": "What are the naming conventions used in this repo?", "mode": "retrieval", "query": "What are the naming conventions used in this repo?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["Folder prefixes: 100_memory, 200_setup, 300_experiments, 400_guides, 500_research; Files use descriptive names with category prefixes"], "expected_files": null, "globs": null, "expected_decisions": null, "notes": null}
{"id": "How does the DSPy reader program work?", "mode": "retrieval", "query": "How does the DSPy reader program work?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["dspy_reader_program.py: RAGAnswer class uses retrieval → MMR rerank → per-file cap → sentence selection → AnswerSig prediction"], "expected_files": null, "globs": null, "expected_decisions": null, "notes": null}
{"id": "What MCP tools are available in this project?", "mode": "retrieval", "query": "What MCP tools are available in this project?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["get_project_context, run_precision_eval, query_memory; MCP server on localhost:3000; see CURSOR_MCP_SETUP.md"], "expected_files": null, "globs": null, "expected_decisions": null, "notes": null}
{"id": "How do I run memory rehydration?", "mode": "retrieval", "query": "How do I run memory rehydration?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["scripts/cursor_memory_rehydrate.py with role and task; scripts/unified_memory_orchestrator.py for full system; export POSTGRES_DSN first"], "expected_files": null, "globs": null, "expected_decisions": null, "notes": null}
{"id": "What are the evaluation metrics and thresholds?", "mode": "retrieval", "query": "What are the evaluation metrics and thresholds?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["scripts/ci_gate_reader.py: MIN_F1_MICRO=0.35, MIN_F1_TAG=0.25; RAGChecker baseline in metrics/baseline_evaluations/"], "expected_files": null, "globs": null, "expected_decisions": null, "notes": null}
{"id": "How does the retriever system work?", "mode": "retrieval", "query": "How does the retriever system work?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["dspy_modules/retriever/: fused query (short/title/BM25), MMR rerank, per-file cap, sentence selection; configs/retriever_weights.yaml"], "expected_files": null, "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the sentence selection process?", "mode": "retrieval", "query": "What is the sentence selection process?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["dspy_modules/reader/sentence_select.py: scores by token overlap, phrase hits, filename tokens; configs/reader_limits.yaml for budgets"], "expected_files": null, "globs": null, "expected_decisions": null, "notes": null}
{"id": "How do I run the evals?", "mode": "retrieval", "query": "How do I run the evals?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["python3 scripts/update_baseline_manifest.py --profile precision_elevated; python3 scripts/ragchecker_official_evaluation.py --lessons-mode advisory; python3 scripts/abp_validation.py --profile precision_elevated"], "expected_files": null, "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the memory orchestrator system?", "mode": "retrieval", "query": "What is the memory orchestrator system?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["scripts/unified_memory_orchestrator.py coordinates LTST, Cursor, Go CLI, Prime systems; provides role-aware context bundles"], "expected_files": null, "globs": null, "expected_decisions": null, "notes": null}
{"id": "How do I compile and test DSPy programs?", "mode": "retrieval", "query": "How do I compile and test DSPy programs?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["dspy_reader_program.py compile_and_save(); uses BootstrapFewShot teleprompter; saves to artifacts/dspy/rag_answer_compiled.json"], "expected_files": null, "globs": null, "expected_decisions": null, "notes": null}
{"id": "What are the phrase hints for different tags?", "mode": "retrieval", "query": "What are the phrase hints for different tags?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["dspy_modules/retriever/query_rewrite.py PHRASE_HINTS: db_workflows, ops_health, meta_ops, rag_qa_single; boosts precision without distorting BM25"], "expected_files": null, "globs": null, "expected_decisions": null, "notes": null}
{"id": "How does the database schema work?", "mode": "retrieval", "query": "How does the database schema work?", "tags": ["db_workflows"], "category": null, "gt_answer": ["documents table with path_tsv for directory semantics; document_chunks with embedding_text; GIN-indexed tsvector for ts_rank(..., 32)"], "expected_files": null, "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the RAGChecker evaluation system?", "mode": "retrieval", "query": "What is the RAGChecker evaluation system?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["scripts/ragchecker_official_evaluation.py; metrics/baseline_evaluations/ for results; precision ≥0.20, recall ≥0.45, F1 ≥0.22 targets"], "expected_files": null, "globs": null, "expected_decisions": null, "notes": null}
{"id": "How do I use the unified memory orchestrator?", "mode": "retrieval", "query": "How do I use the unified memory orchestrator?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["export POSTGRES_DSN='mock://test' && python3 scripts/unified_memory_orchestrator.py --systems ltst cursor go_cli prime --role planner 'task'"], "expected_files": null, "globs": null, "expected_decisions": null, "notes": null}
{"id": "What are the reader limits and budgets?", "mode": "retrieval", "query": "What are the reader limits and budgets?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["configs/reader_limits.yaml: per_chunk=2, total_sentences=12, min_sentence_score=0.1, abstain_threshold=0.05"], "expected_files": null, "globs": null, "expected_decisions": null, "notes": null}
{"id": "How does MMR reranking work?", "mode": "retrieval", "query": "How does MMR reranking work?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["dspy_modules/retriever/rerank.py: mmr_rerank() with alpha=0.85, per_file_penalty=0.10; prevents single file monopolizing top-K"], "expected_files": null, "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the per-file cap mechanism?", "mode": "retrieval", "query": "What is the per-file cap mechanism?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["per_file_cap() limits chunks per file (default 5); prevents one README from dominating results; configurable via PER_FILE_CAP env"], "expected_files": null, "globs": null, "expected_decisions": null, "notes": null}
{"id": "How do I test the MCP server?", "mode": "retrieval", "query": "How do I test the MCP server?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["curl http://localhost:3000/health; python3 test_mcp_for_codex.py; curl -X POST localhost:3000/mcp/tools/call with tool_name"], "expected_files": null, "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the litellm compatibility shim?", "mode": "retrieval", "query": "What is the litellm compatibility shim?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["litellm_compatibility_shim.py patches imports for DSPy 3.0.1; applied before DSPy imports in scripts"], "expected_files": null, "globs": null, "expected_decisions": null, "notes": null}
{"id": "How does the virtual environment manager work?", "mode": "retrieval", "query": "How does the virtual environment manager work?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["scripts/venv_manager.py: ensure_venv_for_script() auto-activates venv; validates dependencies; sets cache directories"], "expected_files": null, "globs": null, "expected_decisions": null, "notes": null}
{"id": "What is the sentence compaction process?", "mode": "retrieval", "query": "What is the sentence compaction process?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["build_reader_context() with compact=True; select_sentences() scores and keeps ~10-12 best lines; reduces noise for better precision"], "expected_files": null, "globs": null, "expected_decisions": null, "notes": null}
{"id": "How do I run the CI gate for reader?", "mode": "retrieval", "query": "How do I run the CI gate for reader?", "tags": ["rag_qa_single"], "category": null, "gt_answer": ["python3 scripts/ci_gate_reader.py; checks F1 floors, regression guards; saves metrics to evals/latest_reader_metrics.json"], "expected_files": null, "globs": null, "expected_decisions": null, "notes": null}
