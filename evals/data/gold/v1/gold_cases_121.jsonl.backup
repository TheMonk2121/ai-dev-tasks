{"id": "gold_000", "query": "Give the high-level getting started index.", "gt_answer": "Document: 400_07_project-planning-roadmap\\nSection: 400_guides/400_07_project-planning-roadmap.md\\nType: markdown\\n\\n\\n```markdown\\n## Capacity Plan: January 2025\\n\\n**Available Hours**: 1", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_001", "query": "What is the main purpose of 400_07_project-planning-roadmap.md?", "gt_answer": "Document: 400_11_performance-optimization\\nSection: 400_guides/400_11_performance-optimization.md\\nType: markdown\\n\\n\\nRAGChecker Evaluation System\\n\\u251c\\u2500\\u2500 OfficialRAGCheckerEvaluator (existt", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_002", "query": "What is the main purpose of 400_11_performance-optimization.md?", "gt_answer": "per_file_cap() limits chunks per file (default 5); prevents one README from dominating results; configurable via PER_FILE_CAP env", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_003", "query": "What is the per-file cap mechanism?", "gt_answer": "Document: 100_cursor-memory-context\\nSection: 100_memory/100_cursor-memory-context.md\\nType: markdown\\n\\n### **B-1032: Documentation t-t3 Authority Structure Implementation**\\n\\n**Status", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_004", "query": "What is the main purpose of 100_cursor-memory-context.md?", "gt_answer": "Document: 400_02_memory-rehydration-context-management\\nSection: 400_guides/400_02_memory-rehydration-context-management.md\\nType: markdown\\n\\n#### **Integration Benefits**\\n\\n**For Memo", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_005", "query": "Which file describes the memory/context workflow?", "gt_answer": "# \\ud83d\\ude80 Precision-Climb v2 Implementation Summary\\n\\n**Date**: September 3, 2025\\n**Status**: \\u2705 **IMPLEMENTED** - All core layers operational\\n**Target**: Precision \\u2265 0.20, Recall \\u2265 0.60,", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_006", "query": "What is the main purpose of 400_02_memory-rehydration-context-management.md?", "gt_answer": "Document: 400_03_system-overview-and-architecture\\nSection: 400_guides/400_03_system-overview-and-architecture.md\\nType: markdown\\n\\n### **\\ud83d\\udea8 CRITICAL: Database Troubleshooting Patterns", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_007", "query": "What is the main purpose of PRECISION_CLIMB_V2_IMPLEMENTATION_SUMMARY.md?", "gt_answer": "Document: 400_05_codebase-organization-patterns\\nSection: 400_guides/400_05_codebase-organization-patterns.md\\nType: markdown\\n\\n### Writing Quality Code\\n1. **Follow established coding", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_008", "query": "What is the main purpose of 400_03_system-overview-and-architecture.md?", "gt_answer": "Reciprocal Rank Fusion combines multiple ranking lists using weighted reciprocal rank scoring with k=60 parameter", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_009", "query": "What is the main purpose of 400_05_codebase-organization-patterns.md?", "gt_answer": "Document: 002_generate-tasks-TEMPLATE\\nSection: 000_core/002_generate-tasks-TEMPLATE.md\\nType: markdown\\n\\n#### **3.", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_010", "query": "What is the RRF fusion method?", "gt_answer": "advanced indexing ### Technical Achievements - \\u2705 **Database Enhancement**: Advanced PostgreSQL + PGVector setup - \\u2705 **Performance Monitoring**: Real-time metrics tracking - \\u2705 **Int", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_011", "query": "What is the main purpose of 002_generate-tasks-TEMPLATE.md?", "gt_answer": "Follow the established workflows in 000_core directory: create PRD, generate tasks, and process task lists using the documented procedures", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_012", "query": "What is the main purpose of 500_b031-completion-summary.md?", "gt_answer": "Document: DSPY_MULTI_AGENT_COMPLETION_SUMMARY\\nSection: DSPY_MULTI_AGENT_COMPLETION_SUMMARY.md\\nType: markdown\\n\\n### **Test Suite Results**\\n- \\u2705 **Model Switching**: Successfully switc", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_013", "query": "Show me the setup docs under 200_setup.", "gt_answer": "Document: 400_01_memory-system-architecture\\nSection: 400_guides/400_01_memory-system-architecture.md\\nType: markdown\\n\\n\\n```bash\\n# Test memory rehydration\\n./scripts/memory_up.sh -r pl", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_014", "query": "search optimization", "gt_answer": "HybridVectorStore combines dense vector search with sparse BM25 search using z-score normalization and RRF fusion", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_015", "query": "How do I run the runbook?", "gt_answer": "dspy_modules/retriever/query_rewrite.py PHRASE_HINTS: db_workflows, ops_health, meta_ops, rag_qa_single; boosts precision without distorting BM25", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_016", "query": "What is the main purpose of DSPY_MULTI_AGENT_COMPLETION_SUMMARY.md?", "gt_answer": "Provenance tracking includes few-shot ID tracking, chunk variant identification, and leakage guards to prevent data contamination", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_017", "query": "What is the main purpose of 400_01_memory-system-architecture.md?", "gt_answer": "Folder prefixes: 100_memory, 200_setup, 300_experiments, 400_guides, 500_research; Files use descriptive names with category prefixes", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_018", "query": "What is the HybridVectorStore?", "gt_answer": "Document: README\\nSection: README.md\\nType: markdown\\n\\n\\n\\n**Runtime Guard-Rails:**\\n\\n- **RAM Pressure Checks**: Prevent memory exhaustion\\n\\n- **Model Janitor**: Unload idle models automa", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_019", "query": "What are the phrase hints for different tags?", "gt_answer": "Document: TASK_GENERATION_B-1059_retrieval-tuning-protocol\\nSection: 000_core/TASK_GENERATION_B-1059_retrieval-tuning-protocol.md\\nType: markdown\\n\\n## \\ud83c\\udfaf **Ready for Implementation**", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_020", "query": "Which file describes the memory/context workflow?", "gt_answer": "Document: 400_00_memory-system-overview\\nSection: 400_guides/400_00_memory-system-overview.md\\nType: markdown\\n\\n#### **Memory Quality Gates**\\n- **Context Integrity**: All memory conte", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_021", "query": "What is the provenance tracking system?", "gt_answer": "python3 scripts/ci_gate_reader.py; checks F1 floors, regression guards; saves metrics to evals/latest_reader_metrics.json", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_022", "query": "What are the naming conventions used in this repo?", "gt_answer": "Set RERANK_ENABLE=1 and use BAAI/bge-reranker-base model for cross-encoder reranking with configurable pool size", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_023", "query": "What is the main purpose of README.md?", "gt_answer": "Current baseline: Precision \\u22650.20, Recall \\u22650.45, F1 Score \\u22650.22, Faithfulness \\u22650.60", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_024", "query": "Where are database troubleshooting patterns documented?", "gt_answer": "The RAG pipeline uses hybrid retrieval with RRF fusion, cross-encoder reranking, and context-aware generation with citation extraction", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_025", "query": "According to 400_06_memory-and-context-systems.md, what is the memory system in this project?", "gt_answer": "Not in context.", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_026", "query": "What is the main purpose of TASK_GENERATION_B-1059_retrieval-tuning-protocol.md?", "gt_answer": "Run: export POSTGRES_DSN=\\", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_027", "query": "What is the main purpose of 400_00_memory-system-overview.md?", "gt_answer": "Not in context.", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_028", "query": "Show the DSPy development context TL;DR.", "gt_answer": "RAGChecker evaluation uses real DSPy RAG integration with oracle metrics, retrieval snapshots, and comprehensive case result normalization", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_029", "query": "How do I run the CI gate for reader?", "gt_answer": "Run the evals using: source throttle_free_eval.sh && python3 scripts/ragchecker_official_evaluation.py --use-bedrock --bypass-cli --stable", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_030", "query": "What are the DSPy integration patterns in 400_09_ai-frameworks-dspy.md?", "gt_answer": "The evaluation manifest template includes chunking configuration, model specifications, retrieval parameters, and evaluation thresholds for reproducible evaluations", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_031", "query": "How do I configure the reranker?", "gt_answer": "Context consumption enforcement requires at least 50 words of context and validates that answers are grounded in retrieved context", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_032", "query": "What are the RAGChecker baseline metrics?", "gt_answer": "# Communication Patterns Guide\\n\\n\\n\\n## \\ud83d\\udd0e TL;DR {#tldr}\\n\\n| what this file is | read when | do next |\\n|---|---|---|\\n| Codified communication patterns and formatting preferences for eff", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_033", "query": "How does the DSPy RAG pipeline work?", "gt_answer": "Evaluation manifests are stored in metrics/baseline_evaluations/ directory with timestamped versions and configuration metadata", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_034", "query": "What is the API key for the Mars colony database?", "gt_answer": "Not in context.", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_035", "query": "What is the memory rehydration protocol?", "gt_answer": "Use the 001_create-prd.md template to create product requirements documents following the established workflow", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_036", "query": "How do I install the time travel dependencies?", "gt_answer": "dspy_reader_program.py: RAGAnswer class uses retrieval \\u2192 MMR rerank \\u2192 per-file cap \\u2192 sentence selection \\u2192 AnswerSig prediction", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_037", "query": "Why do we demote docs/design subtrees slightly?", "gt_answer": "configs/reader_limits.yaml: per_chunk=2, total_sentences=12, min_sentence_score=0.1, abstain_threshold=0.05", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_038", "query": "How does the RAGChecker evaluation work?", "gt_answer": "Multi-hop retrieval uses HyDE for query expansion, PRF for term expansion, and RRF fusion to combine dense and sparse results with cross-encoder reranking", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_039", "query": "How do I run the evals?", "gt_answer": "Document: 400_09_ai-frameworks-dspy\\nSection: 400_guides/400_09_ai-frameworks-dspy.md\\nType: markdown\\n\\n\\n\\n**AI Testing Tools**:\\n- **Performance Monitoring**: Real-time AI performance", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_040", "query": "What is the evaluation manifest template?", "gt_answer": "Default chunk size is 450 tokens with 0.10 overlap ratio and Jaccard threshold of 0.8 for deduplication", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_041", "query": "What is the context consumption enforcement?", "gt_answer": "build_reader_context() with compact=True; select_sentences() scores and keeps ~10-12 best lines; reduces noise for better precision", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_042", "query": "What is the main purpose of 100_communication-patterns-guide.md?", "gt_answer": "Run ./setup_shell_integration.sh from the root directory to copy env.ai-dev-tasks and append source lines to shell profiles", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_043", "query": "List the core workflow guides in 000_core.", "gt_answer": "dspy_modules/retriever/: fused query (short/title/BM25), MMR rerank, per-file cap, sentence selection; configs/retriever_weights.yaml", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_044", "query": "Where do evaluation manifests live?", "gt_answer": "Document: 100_database-troubleshooting-patterns\\nSection: 100_memory/100_database-troubleshooting-patterns.md\\nType: markdown\\n\\n\\n```bash\\n# 1.", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_045", "query": "How do I configure the quantum entanglement module?", "gt_answer": "Document: 100_governance-by-code-insights\\nSection: 100_memory/100_governance-by-code-insights.md\\nType: markdown\\n\\n\\n```python\\n# Budget pattern\\ndef enforce_budget(metric, threshold, a", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_046", "query": "According to 400_06_memory-and-context-systems.md, what is the memory system in this project?", "gt_answer": "Use pgvector with cosine distance operator (<=>) and configure HNSW or IVFFLAT indexes for approximate nearest neighbor search", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_047", "query": "How do I create a PRD?", "gt_answer": "Document: PRD_B-1059_retrieval-tuning-protocol\\nSection: 000_core/PRD_B-1059_retrieval-tuning-protocol.md\\nType: markdown\\n\\n## \\u2696\\ufe0f **Trade-offs & Alternatives**\\n\\n- **Higher BM25 bias**", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_048", "query": "How does the DSPy reader program work?", "gt_answer": "Set evaluation thresholds for F1 score (\\u22650.22), precision drift (\\u22640.02), latency increase (\\u226415%), and oracle prefilter (\\u22650.85)", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_049", "query": "What are the reader limits and budgets?", "gt_answer": "Create an IVFFLAT index with 100 lists on embedding_vector using vector_cosine_ops", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_050", "query": "Where are the model configuration settings defined?", "gt_answer": "websearch_to_tsquery is used for full-text search with websearch syntax support in PostgreSQL", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_051", "query": "Which file defines the governance and AI constitution?", "gt_answer": "Use the database resilience manager with retry wrappers and proper connection pooling for migration operations", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_052", "query": "How does multi-hop retrieval work with fusion?", "gt_answer": "scripts/cursor_memory_rehydrate.py with role and task; scripts/unified_memory_orchestrator.py for full system; export POSTGRES_DSN first", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_053", "query": "What is the main purpose of 400_09_ai-frameworks-dspy.md?", "gt_answer": "scripts/ragchecker_official_evaluation.py; metrics/baseline_evaluations/ for results; precision \\u22650.20, recall \\u22650.45, F1 \\u22650.22 targets", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_054", "query": "BM25", "gt_answer": "Document: 400_06_backlog-management-priorities\\nSection: 400_guides/400_06_backlog-management-priorities.md\\nType: markdown\\n\\n#### **How to Identify Execution Type**\\n\\n**Look for these", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_055", "query": "What is the chunking configuration for embeddings?", "gt_answer": "get_project_context, run_precision_eval, query_memory; MCP server on localhost:3000; see CURSOR_MCP_SETUP.md", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_056", "query": "What is the sentence compaction process?", "gt_answer": "documents table with path_tsv for directory semantics; document_chunks with embedding_text; GIN-indexed tsvector for ts_rank(..., 32)", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_057", "query": "How do I set up shell integration?", "gt_answer": "Canary percentage should not exceed 50% by default, configurable via max_percentage parameter", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_058", "query": "Where are the model configuration settings defined?", "gt_answer": "dspy_modules/reader/sentence_select.py: scores by token overlap, phrase hits, filename tokens; configs/reader_limits.yaml for budgets", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_059", "query": "How does the retriever system work?", "gt_answer": "curl http://localhost:3000/health; python3 test_mcp_for_codex.py; curl -X POST localhost:3000/mcp/tools/call with tool_name", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_060", "query": "What is the main purpose of 100_database-troubleshooting-patterns.md?", "gt_answer": "python3 scripts/update_baseline_manifest.py --profile precision_elevated; python3 scripts/ragchecker_official_evaluation.py --lessons-mode advisory; python3 scripts/abp_validation.py --profile precision_elevated", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_061", "query": "What is the main purpose of 100_governance-by-code-insights.md?", "gt_answer": "The gate and promote system validates F1 score, precision drift, latency, and oracle metrics before promoting DSPy compiled artifacts to production", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_062", "query": "Why do ops_health phrase hints include health check and shell init?", "gt_answer": "dspy_modules/retriever/rerank.py: mmr_rerank() with alpha=0.85, per_file_penalty=0.10; prevents single file monopolizing top-K", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_063", "query": "How do I configure pgvector for ANN operations?", "gt_answer": "Citation extraction uses advanced scoring with expected citation matching, filename extraction, and relevance scoring for top 5 citations", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_064", "query": "What are the core steps emphasized under 200_setup?", "gt_answer": "dspy_reader_program.py compile_and_save(); uses BootstrapFewShot teleprompter; saves to artifacts/dspy/rag_answer_compiled.json", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_065", "query": "Show me the setup docs under 200_setup.", "gt_answer": "Document: 400_08_task-management-workflows\\nSection: 400_guides/400_08_task-management-workflows.md\\nType: markdown\\n\\n\\n```bash\\n# Execute sprint tasks\\npython3 scripts/sprint_execution.", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_066", "query": "What is the main purpose of PRD_B-1059_retrieval-tuning-protocol.md?", "gt_answer": "Document: B-1007_COMPLETION_SUMMARY\\nSection: B-1007_COMPLETION_SUMMARY.md\\nType: markdown\\n\\n### Business Success \\u2705\\n- \\u2705 50% reduction in runtime errors through type validation\\n- \\u2705 30%", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_067", "query": "database choice", "gt_answer": "Document: 400_04_development-workflow-and-standards\\nSection: 400_guides/400_04_development-workflow-and-standards.md\\nType: markdown\\n\\n\\n```python\\ndef api_integration_pattern(endpoint", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_068", "query": "What is DSPy according to 400_07_ai-frameworks-dspy.md?", "gt_answer": "Document: 000_backlog\\nSection: 000_core/000_backlog.md\\nType: markdown\\n\\n#### Phase 1: Database Schema Implementation (2 days)\\n**Tasks:**\\n- [ ] Create `conv_chunks` table with HNSW i", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_069", "query": "How do I configure evaluation thresholds?", "gt_answer": "scripts/ci_gate_reader.py: MIN_F1_MICRO=0.35, MIN_F1_TAG=0.25; RAGChecker baseline in metrics/baseline_evaluations/", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_070", "query": "Which file summarizes backlog and priorities?", "gt_answer": "\\\\n+## \\ud83e\\udde0 Memory Rehydration Requirements (Constitution)\\n\\\\n+- Run `./scripts/memory_up.sh` at session start; then read `100_memory/100_cursor-memory-context.md` and `000_core/000_bac", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_071", "query": "Point me to memory-related guides under 100_memory.", "gt_answer": "Deployment is blocked by F1 score below baseline, precision drift >2%, latency increase >15%, and oracle metrics below thresholds", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_072", "query": "How do I create a vector index with IVFFLAT?", "gt_answer": "scripts/unified_memory_orchestrator.py coordinates LTST, Cursor, Go CLI, Prime systems; provides role-aware context bundles", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_073", "query": "What is the websearch tsquery function?", "gt_answer": "scripts/venv_manager.py: ensure_venv_for_script() auto-activates venv; validates dependencies; sets cache directories", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_074", "query": "postgresql", "gt_answer": "Use BootstrapFewShot teleprompter with grounding metric for RAG optimization and few-shot learning", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_075", "query": "How do I run database migrations?", "gt_answer": "Document: 100_implementation-patterns-library\\nSection: 100_memory/100_implementation-patterns-library.md\\nType: markdown\\n\\n## \\ud83d\\udea8 **CRITICAL: Implementation Patterns are Essential**\\n\\n*", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_076", "query": "How do I run memory rehydration?", "gt_answer": "Document: OPTIMIZATION_SUMMARY\\nSection: OPTIMIZATION_SUMMARY.md\\nType: markdown\\n\\n### **Quality Gates Passed**\\n- \\u2705 No code duplication\\n- \\u2705 Proper error handling\\n- \\u2705 Type safety maint", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_077", "query": "What is the RAGChecker evaluation system?", "gt_answer": "export POSTGRES_DSN='mock://test' && python3 scripts/unified_memory_orchestrator.py --systems ltst cursor go_cli prime --role planner 'task'", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_078", "query": "What is the main purpose of 400_06_backlog-management-priorities.md?", "gt_answer": "# Advanced Model Adaptation Framework: Task 6.2\\n\\n<!-- MEMORY_CONTEXT: HIGH - Advanced model adaptation framework implementation for B-032 Memory Context System Architecture Researc", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_079", "query": "What MCP tools are available in this project?", "gt_answer": "litellm_compatibility_shim.py patches imports for DSPy 3.0.1; applied before DSPy imports in scripts", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_080", "query": "memory system", "gt_answer": "Document: 400_12_advanced-configurations\\nSection: 400_guides/400_12_advanced-configurations.md\\nType: markdown\\n\\n# \\u2699\\ufe0f Advanced Configurations\\n\\n<!-- ANCHOR_KEY: advanced-configuration", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_081", "query": "How does the database schema work?", "gt_answer": "Document: 100_debugging-effectiveness-analysis\\nSection: 100_memory/100_debugging-effectiveness-analysis.md\\nType: markdown\\n\\n### **Phase 1: Baseline Establishment (Week 1-2)**\\n- [ ]", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_082", "query": "What is the canary deployment percentage limit?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_083", "query": "What is the sentence selection process?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_084", "query": "API design", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_085", "query": "What is DSPy according to 400_07_ai-frameworks-dspy.md?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_086", "query": "How do I test the MCP server?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_087", "query": "How do I run the evals?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_088", "query": "What is the gate and promote system?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_089", "query": "How does MMR reranking work?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_090", "query": "What is the citation extraction process?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_091", "query": "How do I compile and test DSPy programs?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_092", "query": "What is the main purpose of 400_08_task-management-workflows.md?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_093", "query": "What is the main purpose of B-1007_COMPLETION_SUMMARY.md?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_094", "query": "What is the main purpose of 400_04_development-workflow-and-standards.md?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_095", "query": "What are the naming conventions used in this repo (see 200_setup)?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_096", "query": "What is the main purpose of 000_backlog.md?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_097", "query": "What are the evaluation metrics and thresholds?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_098", "query": "What is the main purpose of 400_06_memory-and-context-systems.md?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_099", "query": "Which gates block deployment?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_100", "query": "Where are database troubleshooting patterns documented?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_101", "query": "Which file summarizes backlog and priorities?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_102", "query": "What is the memory orchestrator system?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_103", "query": "How does the virtual environment manager work?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_104", "query": "Show the DSPy development context TL;DR.", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_105", "query": "How do I use the teleprompter?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_106", "query": "What is the main purpose of 100_implementation-patterns-library.md?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_107", "query": "Point me to memory-related guides under 100_memory.", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_108", "query": "What is the main purpose of OPTIMIZATION_SUMMARY.md?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_109", "query": "How do I use the unified memory orchestrator?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_110", "query": "What is the main purpose of 500_advanced-model-adaptation-framework-task-6-2.md?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_111", "query": "hybrid search", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_112", "query": "What is the litellm compatibility shim?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_113", "query": "pgvector", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_114", "query": "Which file defines the governance and AI constitution?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_115", "query": "Give the high-level getting started index.", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_116", "query": "Why do we bias ops/shell/setup subtrees for ops_health?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_117", "query": "What is the main purpose of 400_12_advanced-configurations.md?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
{"id": "gold_118", "query": "What are the naming conventions used in this repo (see 200_setup)?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_119", "query": "vector search", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "retrieval"}
{"id": "gold_120", "query": "What is the main purpose of 100_debugging-effectiveness-analysis.md?", "gt_answer": "No answer available", "tags": ["comprehensive", "gold", "evaluation"], "mode": "reader"}
