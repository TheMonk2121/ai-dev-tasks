{"case_id": "Where are the model configuration settings defined?", "query": "Where are the model configuration settings defined?", "answers": ["configs/retriever_weights.yaml; configs/reader_limits.yaml; DSPy model in dspy_reader_program.py _lm() function"], "tag": "rag_qa_single"}
{"case_id": "What are the naming conventions used in this repo?", "query": "What are the naming conventions used in this repo?", "answers": ["Folder prefixes: 100_memory, 200_setup, 300_experiments, 400_guides, 500_research; Files use descriptive names with category prefixes"], "tag": "rag_qa_single"}
{"case_id": "Show the DSPy development context TL;DR.", "query": "Show the DSPy development context TL;DR.", "answers": ["500_dspy-v2-optimization-completion-summary.md contains TL;DR; DSPy reader program in dspy-rag-system/src/dspy_modules/dspy_reader_program.py"], "tag": "rag_qa_single"}
{"case_id": "Which file summarizes backlog and priorities?", "query": "Which file summarizes backlog and priorities?", "answers": ["000_core/000_backlog.md contains current priorities and roadmap; PRD-B-1008-Enhanced-Backlog-System.md for backlog system design"], "tag": "rag_qa_single"}
{"case_id": "Which file defines the governance and AI constitution?", "query": "Which file defines the governance and AI constitution?", "answers": ["400_ai-constitution.md defines governance and AI constitution for DSPy agents and MCP operations"], "tag": "rag_qa_single"}
{"case_id": "Where are database troubleshooting patterns documented?", "query": "Where are database troubleshooting patterns documented?", "answers": ["100_memory/100_database-troubleshooting-patterns.md; scripts/migrations/ for SQL patterns; 400_guides/400_03_system-overview-and-architecture.md"], "tag": "db_workflows"}
{"case_id": "Which file describes the memory/context workflow?", "query": "Which file describes the memory/context workflow?", "answers": ["100_memory/100_cursor-memory-context.md; scripts/cursor_memory_rehydrate.py; 400_guides/400_06_memory-and-context-systems.md"], "tag": "rag_qa_single"}
{"case_id": "Give the high-level getting started index.", "query": "Give the high-level getting started index.", "answers": ["README.md; 400_system-service-guide.md; CURSOR_MCP_SETUP.md for MCP tooling"], "tag": "rag_qa_single"}
{"case_id": "Show me the setup docs under 200_setup.", "query": "Show me the setup docs under 200_setup.", "answers": ["200_setup/ contains setup documentation; CURSOR_MCP_SETUP.md for MCP integration; env.ai-dev-tasks for environment"], "tag": "rag_qa_single"}
{"case_id": "Point me to memory-related guides under 100_memory.", "query": "Point me to memory-related guides under 100_memory.", "answers": ["100_memory/100_cursor-memory-context.md; 100_memory/100_implementation-patterns-library.md; 100_memory/100_governance-by-code-insights.md"], "tag": "rag_qa_single"}
{"case_id": "How does the DSPy reader program work?", "query": "How does the DSPy reader program work?", "answers": ["dspy_reader_program.py: RAGAnswer class uses retrieval → MMR rerank → per-file cap → sentence selection → AnswerSig prediction"], "tag": "rag_qa_single"}
{"case_id": "What MCP tools are available in this project?", "query": "What MCP tools are available in this project?", "answers": ["get_project_context, run_precision_eval, query_memory; MCP server on localhost:3000; see CURSOR_MCP_SETUP.md"], "tag": "rag_qa_single"}
{"case_id": "How do I run memory rehydration?", "query": "How do I run memory rehydration?", "answers": ["scripts/cursor_memory_rehydrate.py with role and task; scripts/unified_memory_orchestrator.py for full system; export POSTGRES_DSN first"], "tag": "rag_qa_single"}
{"case_id": "What are the evaluation metrics and thresholds?", "query": "What are the evaluation metrics and thresholds?", "answers": ["scripts/ci_gate_reader.py: MIN_F1_MICRO=0.35, MIN_F1_TAG=0.25; RAGChecker baseline in metrics/baseline_evaluations/"], "tag": "rag_qa_single"}
{"case_id": "How does the retriever system work?", "query": "How does the retriever system work?", "answers": ["dspy_modules/retriever/: fused query (short/title/BM25), MMR rerank, per-file cap, sentence selection; configs/retriever_weights.yaml"], "tag": "rag_qa_single"}
{"case_id": "What is the sentence selection process?", "query": "What is the sentence selection process?", "answers": ["dspy_modules/reader/sentence_select.py: scores by token overlap, phrase hits, filename tokens; configs/reader_limits.yaml for budgets"], "tag": "rag_qa_single"}
{"case_id": "How do I run the evals?", "query": "How do I run the evals?", "answers": ["python3 scripts/update_baseline_manifest.py --profile precision_elevated; python3 scripts/ragchecker_official_evaluation.py --lessons-mode advisory; python3 scripts/abp_validation.py --profile precision_elevated"], "tag": "rag_qa_single"}
{"case_id": "What is the memory orchestrator system?", "query": "What is the memory orchestrator system?", "answers": ["scripts/unified_memory_orchestrator.py coordinates LTST, Cursor, Go CLI, Prime systems; provides role-aware context bundles"], "tag": "rag_qa_single"}
{"case_id": "How do I compile and test DSPy programs?", "query": "How do I compile and test DSPy programs?", "answers": ["dspy_reader_program.py compile_and_save(); uses BootstrapFewShot teleprompter; saves to artifacts/dspy/rag_answer_compiled.json"], "tag": "rag_qa_single"}
{"case_id": "What are the phrase hints for different tags?", "query": "What are the phrase hints for different tags?", "answers": ["dspy_modules/retriever/query_rewrite.py PHRASE_HINTS: db_workflows, ops_health, meta_ops, rag_qa_single; boosts precision without distorting BM25"], "tag": "rag_qa_single"}
{"case_id": "How does the database schema work?", "query": "How does the database schema work?", "answers": ["documents table with path_tsv for directory semantics; document_chunks with embedding_text; GIN-indexed tsvector for ts_rank(..., 32)"], "tag": "db_workflows"}
{"case_id": "What is the RAGChecker evaluation system?", "query": "What is the RAGChecker evaluation system?", "answers": ["scripts/ragchecker_official_evaluation.py; metrics/baseline_evaluations/ for results; precision ≥0.20, recall ≥0.45, F1 ≥0.22 targets"], "tag": "rag_qa_single"}
{"case_id": "How do I use the unified memory orchestrator?", "query": "How do I use the unified memory orchestrator?", "answers": ["export POSTGRES_DSN='mock://test' && python3 scripts/unified_memory_orchestrator.py --systems ltst cursor go_cli prime --role planner 'task'"], "tag": "rag_qa_single"}
{"case_id": "What are the reader limits and budgets?", "query": "What are the reader limits and budgets?", "answers": ["configs/reader_limits.yaml: per_chunk=2, total_sentences=12, min_sentence_score=0.1, abstain_threshold=0.05"], "tag": "rag_qa_single"}
{"case_id": "How does MMR reranking work?", "query": "How does MMR reranking work?", "answers": ["dspy_modules/retriever/rerank.py: mmr_rerank() with alpha=0.85, per_file_penalty=0.10; prevents single file monopolizing top-K"], "tag": "rag_qa_single"}
{"case_id": "What is the per-file cap mechanism?", "query": "What is the per-file cap mechanism?", "answers": ["per_file_cap() limits chunks per file (default 5); prevents one README from dominating results; configurable via PER_FILE_CAP env"], "tag": "rag_qa_single"}
{"case_id": "How do I test the MCP server?", "query": "How do I test the MCP server?", "answers": ["curl http://localhost:3000/health; python3 test_mcp_for_codex.py; curl -X POST localhost:3000/mcp/tools/call with tool_name"], "tag": "rag_qa_single"}
{"case_id": "What is the litellm compatibility shim?", "query": "What is the litellm compatibility shim?", "answers": ["litellm_compatibility_shim.py patches imports for DSPy 3.0.1; applied before DSPy imports in scripts"], "tag": "rag_qa_single"}
{"case_id": "How does the virtual environment manager work?", "query": "How does the virtual environment manager work?", "answers": ["scripts/venv_manager.py: ensure_venv_for_script() auto-activates venv; validates dependencies; sets cache directories"], "tag": "rag_qa_single"}
{"case_id": "What is the sentence compaction process?", "query": "What is the sentence compaction process?", "answers": ["build_reader_context() with compact=True; select_sentences() scores and keeps ~10-12 best lines; reduces noise for better precision"], "tag": "rag_qa_single"}
{"case_id": "How do I run the CI gate for reader?", "query": "How do I run the CI gate for reader?", "answers": ["python3 scripts/ci_gate_reader.py; checks F1 floors, regression guards; saves metrics to evals/latest_reader_metrics.json"], "tag": "rag_qa_single"}
