# Precision Evidence Filter Configuration
# Based on Codex debrief: Actual evidence filter parameters that control in-process evaluation
# Current: P=0.117, R=0.165, F1=0.133
# Target: P≥0.135, R~0.16, F1≥0.145

# =============================================================================
# STABLE RATE LIMITING (Anti-Throttling - Proven Settings)
# =============================================================================

# Queue Client Concurrency Control (Critical for USE_BEDROCK_QUEUE=1)
export USE_BEDROCK_QUEUE=1
export ASYNC_MAX_CONCURRENCY=1
export BEDROCK_MAX_CONCURRENCY=1

# Evaluator-Level Rate Limiting (Conservative - Proven to work)
export BEDROCK_MAX_RPS=0.15
export BEDROCK_COOLDOWN_SEC=30
export BEDROCK_RETRY_MAX=8
export BEDROCK_RETRY_BASE=1.8
export BEDROCK_RETRY_MAX_SLEEP=20

# Disable Coverage Rewrite (Major Source of Bedrock Calls)
export RAGCHECKER_COVERAGE_REWRITE=0

# Reduce JSON Usage (Prevent Repair Loops)
export RAGCHECKER_JSON_PROMPTS=0
export RAGCHECKER_JSON_MAX_TOKENS=200

# =============================================================================
# EVIDENCE FILTER PARAMETERS (ACTUAL PRECISION LEVERS)
# =============================================================================

# Evidence gate and selection
export RAGCHECKER_EVIDENCE_GUARD=1
# Balance precision/recall (recall recovery vs strict precision)
export RAGCHECKER_EVIDENCE_JACCARD=0.18      # was 0.05 (loose); try moderate
export RAGCHECKER_EVIDENCE_COVERAGE=0.46     # was 0.15 (loose) / 0.50 (strict)

# Selection mode - target_k for precision focus
export RAGCHECKER_EVIDENCE_KEEP_MODE=target_k
export RAGCHECKER_TARGET_K_WEAK=2            # reduce weak K to keep noise down
export RAGCHECKER_TARGET_K_BASE=5            # keep base at 5 for recall
export RAGCHECKER_TARGET_K_STRONG=7          # allow 7 when signal is strong
export RAGCHECKER_SIGNAL_DELTA_WEAK=0.10
export RAGCHECKER_SIGNAL_DELTA_STRONG=0.22

# Weights for evidence scoring
export RAGCHECKER_WEIGHT_JACCARD=0.25        # emphasize exact token overlap moderately
export RAGCHECKER_WEIGHT_ROUGE=0.40          # boost sequence alignment for faithfulness
export RAGCHECKER_WEIGHT_COSINE=0.35         # slightly lower to avoid generic overlap

# Diversity/Redundancy caps for precision
export RAGCHECKER_REDUNDANCY_TRIGRAM_MAX=0.45    # relax redundancy to allow coverage
export RAGCHECKER_PER_CHUNK_CAP=1                # keep strict per-chunk
export RAGCHECKER_PER_CHUNK_CAP_SMALL=2          # allow 2 for small contexts

# Min/Max sentences for evidence selection
export RAGCHECKER_EVIDENCE_MIN_SENT=2
export RAGCHECKER_EVIDENCE_MAX_SENT=9

# Claim binding and dropping
export RAGCHECKER_CLAIM_BINDING=1
export RAGCHECKER_DROP_UNSUPPORTED=1

# Generation controls
export RAGCHECKER_CONCISE=1
export RAGCHECKER_MAX_WORDS=750              # was 1000/600; middle ground for recall
export RAGCHECKER_REQUIRE_CITATIONS=1

# Semantic features (if available)
export RAGCHECKER_SEMANTIC_FEATURES=1
export RAGCHECKER_USE_EMBED_GUARD=1

# Full evaluation mode
export RAGCHECKER_FAST_MODE=0

# AWS Configuration
export AWS_REGION=us-east-1
export BEDROCK_MODEL_ID=anthropic.claude-3-haiku-20240307-v1:0

# =============================================================================
# CONFIGURATION NOTES
# =============================================================================
# This configuration implements the actual evidence filter parameters that
# control the in-process evaluation behavior:
# 1. Tighter evidence thresholds (JACCARD=0.05, COVERAGE=0.15)
# 2. Target-K selection mode for precision focus
# 3. Optimized weights for evidence scoring
# 4. Redundancy caps to reduce duplicate content
# 5. Sentence limits for focused evidence selection
# Expected: P +1.0-2.0 pts, Recall -0.2-0.6 pts, Net F1 ↑
