{
    // Markdown Settings (based on 200_naming-conventions.md)
    "[markdown]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.formatOnSave": true,
        "editor.wordWrap": "on",
        "editor.rulers": [
            120
        ],
        "editor.unicodeHighlight.ambiguousCharacters": false,
        "editor.unicodeHighlight.invisibleCharacters": false,
        "editor.suggest.showReferences": true,
        "editor.snippetSuggestions": "top"
    },
    // Markdown Extension Settings
    "markdown.extension.toc.updateOnSave": true,
    "markdown.extension.toc.orderedList": true,
    "markdown.validate.enabled": true,
    "markdown.preview.breaks": true,
    "markdown.preview.linkify": true,
    "markdown.preview.typographer": true,
    "markdown.preview.fontFamily": "-apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', system-ui, 'Ubuntu', 'Droid Sans', sans-serif",
    "markdown.preview.fontSize": 14,
    // Markdownlint Configuration (references external config file)
    "markdownlint.configFile": ".markdownlint.jsonc",
    // Python Settings (for scripts/)
    "python.defaultInterpreterPath": "${workspaceFolder}/venv/bin/python",
    "python.analysis.typeCheckingMode": "basic",
    "python.analysis.autoImportCompletions": true,
    "python.analysis.autoImportUserSymbols": true,
    "python.analysis.autoImportPreferredFormat": "absolute",
    "python.analysis.extraPaths": [
        "dspy-rag-system/src"
    ],
    "python.analysis.diagnosticMode": "workspace",
    "python.formatting.provider": "black",
    // Disable built-in linting to avoid conflicts; use Ruff extension instead
    "python.linting.enabled": false,
    "python.linting.pylintEnabled": false,
    "python.testing.pytestEnabled": true,
    // Use Black as the default formatter for Python files and run Ruff fixes/imports on save
    "[python]": {
        "editor.defaultFormatter": "ms-python.black-formatter",
        "editor.codeActionsOnSave": {
            "source.fixAll.ruff": "explicit",
            "source.organizeImports.ruff": "explicit"
        }
    },
    // Git Settings
    "git.enableSmartCommit": true,
    "git.confirmSync": false,
    "git.autofetch": true,
    // GitLens settings retained; Git Graph removed from recommendations
    // File Management
    "files.associations": {
        "*.md": "markdown",
        "*.jsonc": "jsonc",
        "*.toml": "toml"
    },
    "files.trimTrailingWhitespace": true,
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,
    // Search & Navigation
    "search.exclude": {
        "**/600_archives/**": true,
        "**/docs/legacy/**": true,
        "**/__pycache__": true,
        "**/.git": true
    },
    // Shell and SQL tooling
    "shellcheck.enable": true,
    "sqlfluff.linter.run": "onSave",
    "sqlfluff.fixOnSave": true,
    // Spell Checker Settings
    "cSpell.enabled": true,
    "cSpell.words": [
        "aiuser",
        "Aiuser",
        "anchorish",
        "backlog",
        "Backlog",
        "capitalisation",
        "Capitalisation",
        "createdb",
        "Createdb",
        "cursorpyright",
        "Cursorpyright",
        "dspy",
        "Dspy",
        "dotenv",
        "elif",
        "Elif",
        "esbenp",
        "Esbenp",
        "Exfiltration",
        "functools",
        "Functools",
        "GGUF",
        "kwargs",
        "Kwargs",
        "linkify",
        "Linkify",
        "markdownlint",
        "Markdownlint",
        "mdformat",
        "Mdformat",
        "numpy",
        "pylint",
        "Pylint",
        "pydantic",
        "pytest",
        "Pytest",
        "pgvector",
        "Pgvector",
        "prio",
        "priorit",
        "pycycle",
        "Pycycle",
        "pyproject",
        "Pyproject",
        "pyyaml",
        "Pyyaml",
        "Qdrant",
        "plpgsql",
        "Plpgsql",
        "psql",
        "Psql",
        "psutil",
        "Psutil",
        "pgcode",
        "Pgcode",
        "psycopg",
        "Psycopg",
        "PYTHONDONTWRITEBYTECODE",
        "PYTHONUNBUFFERED",
        "redocity",
        "Redocity",
        "redocly",
        "Redocly",
        "Rehydration",
        "Rehydrator",
        "sanitisation",
        "Sanitisation",
        "sanitiser",
        "Sanitiser",
        "Segoe",
        "BlinkMacSystemFont",
        "Ubuntu",
        "Droid",
        "socketio",
        "pycache",
        "Pycache",
        "getattr",
        "Getattr",
        "getctime",
        "Getctime",
        "getpid",
        "Getpid",
        "isinstance",
        "Isinstance",
        "asyncio",
        "Asyncio",
        "isort",
        "Isort",
        "Negotiables",
        "pbar",
        "Pbar",
        "regen",
        "Regen",
        "supervisorctl",
        "Supervisorctl",
        "tiktoken",
        "tqdm",
        "Tqdm",
        "tolower",
        "Tolower",
        "toml",
        "Toml",
        "venv",
        "Venv",
        "mccabe",
        "Mccabe",
        "noqa",
        "os",
        "Os",
        "setex",
        "Setex",
        "Uncategorized",
        "Uncordon",
        "tulpn",
        "Tulpn",
        "mbps",
        "Mbps",
        "mypy",
        "Mypy",
        "iftop",
        "Iftop",
        "ICML",
        "Qube",
        "sdist",
        "Sdist",
        "dylib",
        "Dylib",
        "tsvector",
        "plainto",
        "tsquery",
        "tobytes",
        "ndarray",
        "Chunker",
        "chunker",
        "fitz",
        "hnsw",
        "HNSW",
        "zscore",
        "TOPK",
        "jsonify",
        "MIXTRAL",
        "pyright",
        "PYRIGHT",
        "pyrightconfig",
        "rglob",
        "doraise",
        "OLLAMA",
        "ollama",
        "getcwd",
        "cand",
        "isready",
        "vulns",
        "tcpm",
        "redef",
        "werkzeug",
        "dedupe",
        "DEDUPE",
        "toks",
        "Jaccard",
        "Canonicalizer",
        "trgm",
        "Println",
        "DBDSN",
        "RRFK",
        "UMAP",
        "Cytoscape",
        "Plotly",
        "cose",
        "httpx",
        "yaxis",
        "xaxis",
        "nemo",
        "NEMO",
        "Nemo",
        "nohup",
        "pids",
        "agentic",
        "mktime",
        "pkill",
        "prds",
        "reqs",
        "xdist",
        "mgmt",
        "xfair",
        "xfail",
        "repr",
        "slugification",
        "direnv",
        "pypackages",
        "mult",
        "fspath",
        "syns",
        "getenv",
        "prdef",
        "prghij",
        "strftime",
        "zeroiztation",
        "zeroized",
        "Zeroization",
        "zeroization",
        "zeroize",
        "cands",
        "ACMR",
        "banaly",
        "befficienc",
        "qtype",
        "serializability"
    ],
    "cSpell.allowCompoundWords": true,
    "cSpell.ignorePaths": [
        "600_archives/**",
        "docs/legacy/**"
    ],
    // Todo Tree Configuration
    "todo-tree.general.tags": [
        "TODO",
        "FIXME",
        "BUG",
        "HACK",
        "NOTE",
        "REVIEW"
    ],
    "todo-tree.highlights.defaultHighlight": {
        "foreground": "white",
        "background": "#ffbd2a",
        "icon": "alert",
        "type": "text-and-comment"
    },
    // Path Intellisense
    "path-intellisense.autoSlashAfterDirectory": true,
    "path-intellisense.extensionOnImport": true,
    // Editor General Settings
    "editor.formatOnSave": true,
    "editor.bracketPairColorization.enabled": true,
    "editor.guides.bracketPairs": true,
    "editor.suggestSelection": "first",
    "editor.linkedEditing": true,
    "editor.stickyScroll.enabled": true,
    "workbench.editor.highlightModifiedTabs": true,
    // Ruff settings migrated away from legacy ruff-lsp; fixes/imports handled via codeActionsOnSave
    "cursorpyright.analysis.autoImportCompletions": true,
    "cursorpyright.analysis.extraPaths": [
        "dspy-rag-system/src",
        "dspy-rag-system"
    ],
    "cursorpyright.analysis.typeCheckingMode": "basic",
    "json.schemas": [
        {
            "fileMatch": [
                "pyrightconfig.json"
            ],
            "url": "https://raw.githubusercontent.com/microsoft/pyright/main/packages/pyright/schema/pyrightconfig.schema.json"
        }
    ]
}
